- form_for transaction, url, :id => "stylish", :method => method do |f|
  = f.error_messages
  %div
    = label_tag "transaction[amount][type]", :caption => "Type"
    = select_tag "transaction[amount][type]", :options => [["Debit", "debit"], ["Credit", "credit"]], :value => (transaction.amount && transaction.amount.type)
  %div
    = f.label :category_id, :caption => "Category"
    = f.select :category_id, :options => [["Uncategorized", ""]] + Category.all.map {|c| [c.name, c.id] }
  - unless transaction.new_record?
    %div
      %label Original description:
      = transaction.original_description
  %div
    = f.label :description
    = f.text_field :description, :size => 50
  %div
    = f.label :check_number
    = f.text_field :check_number, :size => 4
  %div
    = label_tag "transaction[amount][value]", :caption => "Amount"
    = text_field_tag "transaction[amount][value]", :size => 6, :value => (transaction.amount && transaction.amount.value)
  %div
    = f.label :settled_on
    = f.text_field :settled_on, :size => 12
  - if transaction.import_rule
    %div
      == Transactions named <b>#{transaction.original_description}</b> are imported as <b>#{transaction.import_rule.description}</b>.
  - else
    %div
      = f.check_box :creating_import_rule
      - caption = "Auto-assign these settings to #{transaction.original_description ? "<b>#{transaction.original_description}</b>" : "these kind of"} transactions from now on"
      = f.label :creating_import_rule, :caption => caption
  %div
    = f.submit button_text
    or
    = link_to "Cancel", url(:transactions, :index, :account_id => params[:account_id])